@import "../../scss/helpers";
@import "variables";

input:not([type="checkbox"]):not([type="submit"]):not([type="radio"]) {
    display: block;
    width: 100%;
    text-align: center;
    height: 40px;
    padding: 0 10px;
    border-radius: 15px;
    background-color: $color--background-dark;
    border: 1px solid;
    border-color: $color--border-dark;
    outline-color: $color--outline;
    box-sizing: border-box;
    @include setTypeStylesAll("body");
    letter-spacing: 0.7px;
    appearance: none;

    .error &:not(:disabled) {
        border-color: $color--error;
    }

    &:disabled {
        background-color: $color--background-dark !important;
        border-color: $color--border-dark !important;
        animation: none;
    }
}

// Cannot change password dots easily
input[type="password"] {
}

.d-form-input:not(.input-with-borders) + .d-form-input.input-with-borders {
    @media #{$screen-tablet} {
        $borderStyle: 1px solid $color--border-dark;
        &:before {
            content: "";
            position: fixed;
            margin-top: -$default-gap;
            left: 0;
            width: 100vw;
            border-top: $borderStyle;
        }
    }
}

.d-form-input.input-with-borders {
    @media #{$screen-tablet} {
        position: relative;
        $borderStyle: 1px solid $color--border-dark;
        padding-top: $default-gap;

        &:last-of-type {
            margin-bottom: $default-gap;
        }

        &:first-of-type:before {
            content: "";
            position: fixed;
            margin-top: -$default-gap;
            left: 0;
            width: 100vw;
            border-top: $borderStyle;
        }

        &:after {
            content: "";
            position: fixed;
            margin-top: 0;
            left: 0;
            width: 100vw;
            border-bottom: $borderStyle;
        }

        .field-description {
            padding-bottom: $default-gap;
        }
    }
}

.field {
    position: relative;
    display: flex;
    flex-flow: column-reverse;
    padding-bottom: $default-gap;
    text-align: center;

    .field-description {
        padding-top: 3px;
    }

    .error-root {
        width: 95%;
    }

    .error {
        color: $color--error;
        font-weight: 500;
        width: 100%;
    }
}

.d-form-radio {
    .field {
        flex-flow: column;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        padding-top: $default-gap;

        label {
            position: relative;
            margin-bottom: $default-gap/2;
            cursor: pointer;
            padding-left: $default-gap * 2;
        }

        .field-description {
            padding-top: 0;
        }

        input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

        input ~ .checkmark {
            background-color: white;
        }

        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: calc(100% - 12px);
            height: calc(100% - 12px);
            border-radius: 50%;
            background: white;
        }

        .checkmark {
            position: absolute;
            top: 50%;
            left: 0;
            transform: translateY(calc(-50% - 2px));
            height: 20px;
            width: 20px;
            background-color: white;
            border-radius: 50%;
        }

        input:checked ~ .checkmark {
            background-color: var(--color-secondary);
        }

        input:checked ~ .checkmark:after {
            display: block;
        }
    }
}

.d-form-checkbox {
    .field {
        flex-flow: column;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        padding-top: $default-gap;

        label {
            position: relative;
            margin-bottom: $default-gap/2;
            cursor: pointer;
            padding-left: $default-gap * 2;
        }

        .field-description {
            padding-top: 0;
        }

        input {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            height: 0;
            width: 0;
        }

        input ~ .checkmark {
            background-color: white;
        }

        .check-icon {
            position: absolute;
            display: none;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 100%;
            height: 100%;
            color: var(--color-secondary);
            stroke: var(--color-secondary);
            stroke-width: 2px;
        }

        .checkmark {
            position: absolute;
            top: 50%;
            left: 0;
            transform: translateY(calc(-50% - 2px));
            height: 20px;
            width: 20px;
            background-color: white;
            border-radius: 3px;
        }

        input:checked ~ .checkmark .check-icon {
            display: block;
        }
    }
}

label {
    margin-bottom: $pad--label;
    margin-top: $pad--label/2;
}

label,
input {
    transition: all 0.2s;
    touch-action: manipulation;
}

.inline-input.inline-input {
    input.single-box {
        width: 75px;
        margin-left: 3px;
        margin-right: 3px;
        display: inline-block;

        @media #{$screen-mobile} {
            width: 55px;
        }
    }
}

input:focus {
    outline: 0;
    background-color: $bg--input !important;
}

// -----------------------LABEL MOVING UP-------------------
/**
* Translate down and scale the label up to cover the placeholder,
* when following an input (with placeholder-shown support).
* Also make sure the label is only on one row, at max 2/3rds of the
* fieldâ€”to make sure it scales properly and doesn't wrap.
*/
input.placeholder-shown + label {
    cursor: text;
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transform: translate(0, #{27px + $pad--label});
    pointer-events: none;
}

/**
* By default, the placeholder should be transparent. Also, it should
* inherit the transition.
*/
::-webkit-input-placeholder {
    opacity: 0;
    transition: inherit;
}

/**
* Show the placeholder when the input is focused.
*/
input:focus::-webkit-input-placeholder {
    opacity: 1;
}

input.placeholder-shown {
    background-color: $bg--input !important;
}

input:not(.placeholder-shown) {
    background-color: $color--background-dark;
    border-color: $color--border-dark;
}

/**
* When the element is focused, remove the label transform.
* Also, do this when the placeholder is _not_ shown, i.e. when
* there's something in the input at all.
*/
input:not(.placeholder-shown) + label,
input:focus + label {
    transform: translate(0, 0);
    cursor: pointer;
    text-align: center;
}

//-----------------------SPIN ARROW------------------------------
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    /* display: none; <- Crashes Chrome on hover */
    -webkit-appearance: none;
    margin: 0; /* <-- Apparently some margin are still there even though it's hidden */
}

//-------------------------ICONS--------------------------------
.input-icon {
    width: 40px;
    position: absolute;
    right: 1px;
    top: 38px;
    padding: 9px;
    border-radius: 15px;
    height: 38px;
    box-sizing: border-box;
    z-index: 1;

    &:hover {
        background-color: $color--background-dark;
    }

    &.barcode-scanner-icon {
        display: none;

        @media #{$screen-tablet} {
            display: block;
        }
    }
}

.error-root {
    position: absolute;
    transform: translateX(-50%);
    left: 50%;
    margin-top: -6px;
}

//----------------------------------------------------------
.error-input-anim {
    animation: shake $appearing-animation-speed;
}
